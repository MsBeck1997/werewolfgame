{"remainingRequest":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sarah/Projects/werewolfgame/werewolfgame/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/src/App.vue","mtime":1598046691553},{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sarah/Projects/werewolfgame/werewolfgame/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FwcCB7CiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsKICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzJjM2U1MDsKICBtYXJnaW4tdG9wOiA2MHB4Owp9CgoK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n\n    <!-- Stats Bars -->\n    <section>\n    <div>\n        <b-container fluid>\n            <div class=\"row\">\n                <!-- Stats -->\n                <div class=\"col-2\">\n                    <b-progress :value=\"info.stats.health\" :max=\"100\" class=\"mb-3\"></b-progress>\n                    <p>Health <br /> {{ info.stats.health }}/100</p>\n                </div>\n                <div class=\"col-2\">\n                    <b-progress :value=\"info.stats.sanity\" :max=\"100\" class=\"mb-3\"></b-progress>\n                    <p>Sanity <br /> {{ info.stats.sanity }}/100</p>\n                </div>\n\n                <div class=\"col-2\">\n                    <b-progress :value=\"info.stats.bloodlust\" :max=\"100\" class=\"mb-3\"></b-progress>\n                    <p>Bloodlust <br /> {{ info.stats.bloodlust }}/100</p>\n                </div>\n\n                <div class=\"col-2\">\n                    <b-progress :value=\"info.stats.suspicion\" :max=\"100\" class=\"mb-3\"></b-progress>\n                    <p>Suspicion <br /> {{ info.stats.suspicion }}/100</p>\n                </div>\n\n                <!-- Time -->\n                <div class=\"col-2\">\n                    Time: {{ info.time.timeOfDay }}\n                    <br />\n                    Day: {{ info.time.day }}\n                </div>\n\n                <div class=\"col-2\">\n                    {{ info.time.moonStatus }}\n                    <br />\n                    Transform in: {{ info.time.transformCountdown }}\n                </div>\n            </div>\n        </b-container>\n    </div>\n    </section>\n\n    <b-container fluid>\n      <div class=\"row\">\n        <div class=\"col-3\">\n\n          <!-- Action Bar -->\n            <section>\n            <b-container>\n                <!-- Hunt -->\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                          <b-button squared @click=\"hunt(info.time)\">Icon <br /> Hunt</b-button>\n                    </div>\n                    <div class=\"col-8\">\n                        Information on action\n                    </div>\n                </div>\n\n                <!-- Church -->\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                          <b-button squared @click=\"church(info.time)\">Icon <br /> Church</b-button>\n                    </div>\n                    <div class=\"col-8\">\n                        Information on action\n                    </div>\n                </div>\n\n                <!-- Rest -->\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                        <b-button squared>Icon <br /> Rest</b-button>\n                    </div>\n                    <div class=\"col-8\">\n                        Information on action\n                    </div>\n                </div>\n\n                <!-- Gather -->\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                        <b-button squared>Icon <br /> Gather</b-button>\n                    </div>\n                    <div class=\"col-8\">\n                        Information on action\n                    </div>\n                </div>\n\n                <!-- Brew -->\n                <div class=\"row\">\n                    <div class=\"col-4\">\n                        <b-button squared @click=\"brew(info.brew, info.time)\">Icon <br /> Brew</b-button>\n                    </div>\n                    <div class=\"col-8\">\n                        Information on action\n                    </div>\n                </div>\n            </b-container>\n            </section>\n\n        </div>\n        <div class=\"col-9\">\n\n            <!-- Log Box -->\n            <section>\n                {{ info.currentTime }}\n                <div class=\"border border-secondary\">\n                    {{ info.diceOutput }}\n                    <br /> <br />\n                    <ul>\n                        <li v-for=\"(message,index) in info.logBox\" :key=\"index\">\n                            {{ message }}\n                        </li>\n                    </ul>\n                </div>\n            </section>\n\n        </div>\n      </div>\n    </b-container>\n\n    <!-- Footer -->\n    <section>\n    <div>\n        <b-container fluid class=\"bv-example-row\">\n            <div class=\"row bg-secondary text-white\">\n                <b-col cols=\"10\"></b-col>\n                <b-col cols=\"2\">Developer</b-col>\n            </div>\n        </b-container>\n    </div>\n    </section>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n\n  data: function() {\n    return {\n        info: {\n            diceOutput: '',\n            logBox: ['First Log', ],\n            time: { currentTime: '1', day: '1', timeOfDay: 'Morning', moonStatus: 'Waning Moon', transformCountdown: '3 days'},\n            stats: { health: '75', sanity: '75', bloodlust: '15', suspicion: '0' },\n            brew: { brewLevel: '0', herbs: '0'},\n        }\n    }\n  },\n\n  methods: {\n    handleTime: function(timeObject) {\n        // HandleTime is a function that takes the currentTime (which is a simple counter modified by actions), and calculates\n        // the day, time of day, and moon cycle from it. It then pushes the change to the time object for usage in the DOM.\n\n        // Calculate day\n        timeObject.day = Math.ceil(timeObject.currentTime / 4)\n\n        // Calculate time of day\n        if (timeObject.currentTime % 4 === 0) {\n            timeObject.timeOfDay = 'Night'\n        } else if (timeObject.currentTime % 4 === 1) {\n            timeObject.timeOfDay = 'Morning'\n        } else if (timeObject.currentTime % 4 === 2) {\n            timeObject.timeOfDay = 'Afternoon'\n        } else if (timeObject.currentTime % 4 === 3) {\n            timeObject.timeOfDay = 'Evening'\n        }\n\n        // Calculate moon and transform\n        if (timeObject.day % 4 === 0) {\n            timeObject.moonStatus = 'Full Moon'\n            timeObject.transformCountdown = 'Tonight'\n        } else if (timeObject.day % 4 === 1) {\n            timeObject.moonStatus = 'Waning Moon'\n            timeObject.transformCountdown = '3 days'\n        } else if (timeObject.day% 4 === 2) {\n            timeObject.moonStatus = 'New Moon'\n            timeObject.transformCountdown = '2 days'\n        } else if (timeObject.day% 4 === 3) {\n            timeObject.moonStatus = 'Waxing Moon'\n            timeObject.transformCountdown = 'Tomorrow'\n        }\n\n        this.info.time = timeObject\n    },\n\n    statTracker: function(statsObject, timeObject) {\n        // StatTracker is a function that handles stat changes from actions and modifies them in data to ensure >100 and <0.\n        // It also handles failure conditions and random events due to stats not being maintained.\n\n        // Health Handler\n        if (statsObject.health > 100) {\n            statsObject.health === 100\n        } else if (statsObject.health <= 0) {\n            statsObject.health === 0\n            this.info.logBox.unshift(\"You feel the last remaining bit of life drain from your body. At least no one will be terrorized by a monster anymore... As you die, you can't help but wonder if there was a better way than death.\")\n        }\n\n        // Sanity Handler\n        if (statsObject.sanity > 100) {\n            statsObject.sanity === 100\n        } else if (statsObject.sanity <= 0) {\n            statsObject.sanity === 33\n            this.info.logBox.unshift(\"You feel strange, moments before everything goes dark. On the brink of insanity, the curse was released, allowing destruction to commence. You feel terrible. You have to control yourself better.\")\n            statsObject.health -= 15\n            statsObject.bloodlust -= 60\n            statsObject.suspicion += 20\n            timeObject.currentTime += 3\n        }\n\n        // Bloodlust Handler\n        if (statsObject.bloodlust < 0) {\n            statsObject.bloodlust === 0\n        } else if (statsObject.bloodlust <= 100) {\n            statsObject.bloodlust === 0\n            this.info.logBox.unshift(\"You feel strange, moments before everything goes dark. On the brink of insanity, the curse was released, allowing destruction to commence. You feel terrible. You have to control yourself better.\")\n            statsObject.health -= 15\n            statsObject.sanity -= 20\n            statsObject.suspicion += 20\n            timeObject.currentTime += 3\n        }\n\n        // Suspicion Handler\n        if (statsObject.suspicion < 0) {\n            statsObject.suspicion === 0\n        } else if (statsObject.suspicion <= 100) {\n            statsObject.suspicion === 90\n            this.info.logBox.unshift(\"Moments before it happens, you catch sight of the stalker following you. You manage to fight them off, killing them in the process. You know that if you don't reduce suspicion in the townsfolk, that was just the first of many.\")\n            statsObject.health -= 15\n            statsObject.sanity -= 20\n            statsObject.bloodlust -= 25\n            timeObject.currentTime += 2\n        }\n\n        this.info.stats = statsObject\n        this.info.time = timeObject\n    },\n\n    hunt: function(timeObject) {\n        // Hunt is an action that rolls a dice, publishes the result to the logBox, and modifies the currentTime and stats in data.\n\n        // Update time in statusBar\n        timeObject.currentTime++\n\n        let roll = Math.floor(Math.random() * 100)\n          if (roll < 11) {\n            console.log('Epic failure')\n            this.diceOutput = 'Epic failure'\n            this.info.logBox.unshift(\"Epic failure\")\n          } else if (roll < 50) {\n            console.log('Failure')\n            this.diceOutput = 'Failure'\n            this.info.logBox.unshift(\"Failure\")\n          } else if (roll < 90) {\n            console.log('Success')\n            this.diceOutput = 'Success'\n            this.info.logBox.unshift(\"Success\")\n          } else if (roll < 101) {\n            console.log('Epic success')\n            this.diceOutput = 'Epic success'\n            this.info.logBox.unshift(\"Epic success\")\n          }\n\n          this.handleTime(timeObject)\n          return this.diceOutput;\n    },\n\n    church: function(timeObject) {\n        // Church is an action that checks the timeOfDay to verify morning or afternoon, then rolls a dice & publishes\n        // the result to logBox. Then it modifies currentTime and statChanges, storing the data.\n\n        if (timeObject.timeOfDay === 'Morning' || timeObject.timeOfDay === 'Afternoon') {\n          let roll = Math.floor(Math.random() * 100)\n          if (roll < 11) {\n            console.log('Epic failure')\n            this.diceOutput = 'Epic failure'\n            this.info.logBox.unshift(\"Epic failure\")\n          } else if (roll < 50) {\n            console.log('Failure')\n            this.diceOutput = 'Failure'\n            this.info.logBox.unshift(\"Failure\")\n          } else if (roll < 90) {\n            console.log('Success')\n            this.diceOutput = 'Success'\n            this.info.logBox.unshift(\"Success\")\n          } else if (roll < 101) {\n            console.log('Epic success')\n            this.diceOutput = 'Epic success'\n            this.info.logBox.unshift(\"Epic success\")\n          }\n        } else {\n            this.info.logBox.unshift(\"You think about attending church, but no services are taking place right now. You should come back when one is happening.\")\n        }\n\n        this.handleTime(timeObject)\n        return this.diceOutput;\n    },\n\n    brew: function(timeObject, brewObject) {\n        // Brew is an action that checks if your inventory has enough herbs to brew (>=3), then uses your brewing level\n        // to roll a dice & publish the result to the logBox. Finally, it modifies the currentTime and stats in data.\n\n        if (this.info.brew.herbs >= 3) {\n            if (this.info.brew.brewLevel === 0) {\n              let roll = Math.floor(Math.random() * 100)\n              if (roll < 11) {\n                this.diceOutput = 'Epic failure'\n                this.info.logBox.unshift(\"Epic failure\")\n              } else if (roll < 50) {\n                this.diceOutput = 'Failure'\n                this.info.logBox.unshift(\"Failure\")\n              } else if (roll < 90) {\n                this.diceOutput = 'Success'\n                this.info.logBox.unshift(\"Success\")\n              } else if (roll < 101) {\n                this.diceOutput = 'Epic success'\n                this.info.logBox.unshift(\"Epic success\")\n              }\n            } else if (this.info.brew.brewLevel === 1) {\n              let roll = Math.floor(Math.random() * 100)\n              if (roll < 11) {\n                console.log('Epic failure')\n                this.diceOutput = 'Epic failure'\n                this.info.logBox.unshift(\"Epic failure\")\n              } else if (roll < 50) {\n                console.log('Failure')\n                this.diceOutput = 'Failure'\n                this.info.logBox.unshift(\"Failure\")\n              } else if (roll < 90) {\n                console.log('Success')\n                this.diceOutput = 'Success'\n                this.info.logBox.unshift(\"Success\")\n              } else if (roll < 101) {\n                console.log('Epic success')\n                this.diceOutput = 'Epic success'\n                this.info.logBox.unshift(\"Epic success\")\n              }\n            }\n\n        } else {\n            this.info.logBox.unshift(\"You consider brewing something, but realize you don't have enough supplies to do so. Maybe you should try your luck gathering some herbs.\")\n        }\n\n          this.handleBrew(brewObject)\n          this.handleTime(timeObject)\n          return this.diceOutput;\n    },\n\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n\n</style>\n"]}]}